@import "quiz.css";

h2 {
  font-size: var(--txt-xl);
  color: var(--txt-c0);
}

h3 {
  font-weight: 300;
}

h4 {
  text-transform: uppercase;
  font-weight: 300;
  position: relative;
  color: var(--txt-c2);
  font-size: var(--txt-l);
  padding-bottom: 3px;
  margin-bottom: 3px;
  margin-top: 2px;
  border-bottom: 1px solid var(--light-border);
}

small {
  font-style: italic;
  color: var(--txt-c2);
}

.pane#begin {
  min-width: 200px;
}

.pane#quiz {
  overflow: hidden;
}

.pane#quiz-start {
  width: 600px;
}

[resizeable] {
  resize: both;
  overflow: auto;
}

.showing {
  opacity: 1;
  scale: 1;
  translate: 0;
  pointer-events: all;
}


fieldset {
  border: 1px solid var(--light-border);
  border-radius: var(--rad-l);
  padding: 10px;
  margin: 6px 3px;
  background: var(--bg-l2);
}

.invisible {
  visibility: hidden;
  pointer-events: none;
  /* position: absolute; */
}

/* Custom checkbox styles! */
input[type="checkbox"]+label {
  cursor: pointer;
  font-size: 90%;
}

input[type="checkbox"] {
  /* Remove most all native input styles */
  appearance: none;
  /* Not removed via appearance */
  margin: 0;
  cursor: pointer;
  display: inline-flex;
  align-items: center;
  justify-content: center;
  font: inherit;
  color: white;
  width: 1.15em;
  height: 1.15em;
  border: 1px solid var(--light-border);
  margin-right: 5px;
  border-radius: 0.15em;
  transform: translateY(-0.075em);
  transition: var(--tr);
}

input[type="checkbox"]::before {
  content: "";
  width: 0.65em;
  height: 0.65em;
  clip-path: polygon(14% 44%, 0 65%, 50% 100%, 100% 16%, 80% 0%, 43% 62%);
  transform: scale(0);
  transition: 120ms transform ease-in-out;
  box-shadow: inset 0.5em 0.5em white;
  /* Windows High Contrast Mode */
  background-color: CanvasText;
}

input[type="checkbox"]:checked::before {
  transform: scale(1);
}

input[type="checkbox"]:checked {
  border: 1px solid var(--light-border);
  background: var(--btn-bg);
}

input[type="checkbox"]:focus {
  outline: 1px solid currentColor;
}

/* Toasts */
.toast-container {
  position: fixed;
  bottom: 0;
  left: 0;
  right: 0;
  width: 100vw;
  display: flex;
  align-items: center;
  flex-direction: column;
  padding-bottom: 15px;
}

.toast {
  width: fit-content;
  margin: 4px;
  padding: 7px 14px;
  background: var(--bg-l1);
  border: 1px solid var(--light-border);
  border-radius: var(--rad-m);
  transform-origin: bottom center;
  transition: var(--tr);
  animation: toast-come-in var(--tr);
}

.toast.hidden {
  scale: 0.9;
  opacity: 0;
}

.toast.error {
  background: var(--wrong-bg);
  border: var(--wrong-border);
}

.toast.success {
  background: var(--correct-bg);
  border: var(--correct-border);
}

.toast-description.smaller {
  font-size: var(--txt-s);
  color: var(--txt-c2);
}

@keyframes toast-come-in {
  from {
    scale: 0.9;
    opacity: 0;
  }
}

/*******
View 
*******/
select {
  padding: 6px 12px;
  border: 1px solid var(--light-border);
  background: var(--bg-l1);
  border-radius: var(--rad-m);
  margin: 3px;
  transition: 0.2s;
  cursor: pointer;
}

select:hover {
  box-shadow: var(--shadow-s);
}

select.hidden,
[data-view-association].hidden {
  display: none;
  /* I wish there was an easy way to animate them in and out */
}

.view-panes {
  position: relative;
}

.view-pane {
  position: absolute;
  width: 100%;
}

table {
  background: var(--bg-l1);
  width: 100%;
  margin: 4px;
  border-collapse: separate;
  border-left: 0;
  border-radius: var(--rad-l);
  border-spacing: 0px;
  border: 1px solid var(--light-border);
}

td,
th {
  padding: 6px 9px;
  vertical-align: top;
}

tr td:not(:nth-child(1 of :not([style*="none"]))),
tr th:not(:nth-child(1 of :not([style*="none"]))) {
  border-left: 1px solid var(--light-border);
}

th {
  padding: 5px;
  background: var(--bg-l0);
}

td {
  border-top: 1px solid var(--light-border);
}

tr:first-child th:nth-child(1 of :not([style*="none"])),
tr:first-child td:nth-child(1 of :not([style*="none"])) {
  border-radius: var(--rad-l) 0 0 0;
}

tr:last-child th:nth-child(1 of :not([style*="none"])),
tr:last-child td:nth-child(1 of :not([style*="none"])) {
  border-radius: 0 0 0 var(--rad-l);
}

tr:first-child th:nth-last-child(1 of :not([style*="none"])),
tr:first-child td:nth-last-child(1 of :not([style*="none"])) {
  border-radius: 0 var(--rad-l) 0 0;
}

tr:last-child th:nth-last-child(1 of :not([style*="none"])),
tr:last-child td:nth-last-child(1 of :not([style*="none"])) {
  border-radius: 0 0 var(--rad-l) 0;
}

.table-row-shrunk {
  width: 0;
}

.view-decl-super {
  border-bottom: 0;
  margin-top: 12px;
  margin-bottom: 0;
}

.view-vocab-word {
  margin: 1px;
  padding: 4px 8px;
  border-bottom: 1px solid var(--light-border);
}

.view-vocab-word:last-child {
  border-bottom: 0;
}

.view-vocab-word .rendered-answer {
  margin-left: 10px;
}

.view-vocab:empty::after {
  content: "No words found";
}

.rendered-answer {
  margin-left: 3px;
  display: inline-block;
}

.quiz-content .rendered-answer {
  font-size: 13px;
  opacity: 1;
}

.text-subtle {
  opacity: 0.6;
}

.text-subtler,
.view-vocab:empty::after {
  font-style: italic;
  font-size: 12px;
  opacity: 0.4;
}